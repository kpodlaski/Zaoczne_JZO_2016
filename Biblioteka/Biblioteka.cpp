//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Biblioteka.cpp
//  @ Date : 11.12.2016
//  @ Author : 
//
//


#include "Biblioteka.h"
#include "ElementKatalogowy.h"
#include "Klient.h"
#include "Personel.h"
#include "stdafx.h"

bool Biblioteka::rezerwacja(ElementKatalogowy element, Klient klient) {
	return true;
}

void Biblioteka::wypozyczenie(ElementKatalogowy element, Klient klient, Personel personel) {
	if (czyMoznaWypozyczyc(element, klient)) {
		//elementyWypozyczone dodaj element;
		//wypozyczenia dodaj klienta w to samo miejsce;
		//skasuj rezerwacje je¿li istnia³a 
		
		elementyWypozyczone.push_back(element);
		wypozyczenia.push_back(klient);

	}

}

void Biblioteka::zwrot(ElementKatalogowy element, Klient klient, Personel personel) {
	//elementyWypozyczone[12];
	for (int i = 0; i < elementyWypozyczone.size(); i++) {
		if (element.nrKat == elementyWypozyczone[i].nrKat) {
			//czy klient wypozycza³
			elementyWypozyczone.erase(elementyWypozyczone.begin() + i);
			wypozyczenia.erase(wypozyczenia.begin() + i);
		}
	}
	
}

void Biblioteka::zakup(ElementKatalogowy element, Personel personel) {
	element.nrKat = katalog.size();//poprawic z likwidacj¹
	katalog.push_back(element);
}

void Biblioteka::likwidacja(ElementKatalogowy element, Personel personel) {

}

bool Biblioteka::czyMoznaRezerowac(ElementKatalogowy element) {
	return false;
}

bool Biblioteka::czyMoznaWypozyczyc(ElementKatalogowy element, Klient klient) {
	return false;
}

